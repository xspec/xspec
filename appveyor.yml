environment:
  global:
    # full path to Saxon jar
    SAXON_JAR: '%TEMP%\xspec\saxon\saxon9he.jar'
    # Ant version used in oXygen
    ANT_VERSION: 1.9.8
    # full path to XML Resolver jar
    XML_RESOLVER_JAR: '%TEMP%\xspec\xml-resolver\resolver.jar'
  matrix:
    # latest Saxon 9.8 version and full path to Jing jar
    - SAXON_VERSION: 9.8.0-7
      JING_JAR: '%TEMP%\xspec\jing\jing.jar'
    # latest Saxon 9.7 version
    #   * XML Calabash will use Saxon jar in its own lib directory.
    #   * BaseX test requires XML Calabash.
    - SAXON_VERSION: 9.7.0-21
      XMLCALABASH_VERSION: 1.1.21-97
      BASEX_VERSION: 8.6.4
    # Saxon version used in oXygen
    - SAXON_VERSION: 9.7.0-19

install:
- ps: >-
    # install Saxon

    curl.exe -fsSL --create-dirs --retry 5 -o "${env:SAXON_JAR}" "http://central.maven.org/maven2/net/sf/saxon/Saxon-HE/${env:SAXON_VERSION}/Saxon-HE-${env:SAXON_VERSION}.jar"


    # install XML Calabash

    if( -Not( Test-Path -Path env:\XMLCALABASH_VERSION ) ) {
        echo "XMLCalabash will not be installed as it uses a higher version of Saxon"
    }

    else {
        curl.exe -fsSL --create-dirs --retry 5 -o "${env:TEMP}\xspec\xmlcalabash\xmlcalabash.zip" "https://github.com/ndw/xmlcalabash1/releases/download/${env:XMLCALABASH_VERSION}/xmlcalabash-${env:XMLCALABASH_VERSION}.zip"
        7z x "${env:TEMP}\xspec\xmlcalabash\xmlcalabash.zip" -o"${env:TEMP}\xspec\xmlcalabash"
        ${env:XMLCALABASH_JAR} = "${env:TEMP}\xspec\xmlcalabash\xmlcalabash-${env:XMLCALABASH_VERSION}\xmlcalabash-${env:XMLCALABASH_VERSION}.jar"
    }


    # install BaseX

    if( -Not( Test-Path -Path env:\BASEX_VERSION ) ) {
        echo "BaseX will not be installed as it requires to run XMLCalabash with a higher version of Saxon";
    }

    else {
        ${env:BASEX_JAR} = "${env:TEMP}\xspec\basex\basex.jar"
        curl.exe -fsSL --create-dirs --retry 5 -o "${env:BASEX_JAR}" "http://files.basex.org/maven/org/basex/basex/${env:BASEX_VERSION}/basex-${env:BASEX_VERSION}.jar"
    }


    # install Ant without installing JDK

    appveyor-retry choco install ant --ignore-dependencies --no-progress --version "${env:ANT_VERSION}"


    # install XML Resolver

    curl.exe -fsSL --create-dirs --retry 5 -o "${env:XML_RESOLVER_JAR}" "http://central.maven.org/maven2/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar"


    # install Jing

    if( -Not( Test-Path -Path env:\JING_JAR ) ) {
        echo "Jing will not be installed"
    }

    else {
        curl.exe -fsSL --create-dirs --retry 5 -o "${env:JING_JAR}" "http://central.maven.org/maven2/com/thaiopensource/jing/20091111/jing-20091111.jar"
    }
build: off
test_script:
- cmd: >-
    rem Print Java version

    java -version


    rem Print Ant version

    ant -version


    rem Print Saxon version

    java -cp "%SAXON_JAR%" net.sf.saxon.Version


    rem execute bats-like unit tests

    test\run-bats.cmd


    rem execute XSpec unit tests

    test\run-xspec-tests-ant.cmd -silent


    rem execute XSpec end-to-end tests

    test\end-to-end\run-e2e-tests.cmd


    rem compile java

    "%ProgramFiles%\Java\jdk1.8.0\bin\javac" -cp "%SAXON_JAR%" java\com\jenitennison\xslt\tests\XSLTCoverageTraceListener.java


    rem check git status

    git status --porcelain | find /v "" & if errorlevel 1 ( verify > NUL ) else ( verify other 2> NUL )
deploy: off
