<?xml version="1.0" encoding="UTF-8"?>
<x:description query="x-urn:test:use-uqname" query-at="use-uqname.xqm" stylesheet="use-uqname.xsl"
	xmlns:myv="http://example.org/ns/my/variable" xmlns:x="http://www.jenitennison.com/xslt/xspec"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!-- Leading and trailing &#x09;&#x0A;&#x0D;&#x20; inserted to names deliberately -->

	<x:scenario label="Using URIQualifiedName in function-call @function and function-param @name">
		<x:call
			function="
				&#x09;&#x0A;&#x0D;&#x20;
				Q{x-urn:test:use-uqname}param-mirror-function
				&#x09;&#x0A;&#x0D;&#x20;">
			<x:param
				name="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{x-urn:test:use-uqname}param-items
					&#x09;&#x0A;&#x0D;&#x20;">
				<function-param-child />
			</x:param>
		</x:call>
		<x:expect label="should be possible">
			<function-param-child />
		</x:expect>
	</x:scenario>

	<x:scenario label="Using URIQualifiedName in function-param @as">
		<x:call function="Q{x-urn:test:use-uqname}param-mirror-function">
			<x:param
				as="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{http://www.w3.org/2001/XMLSchema}string
					&#x09;&#x0A;&#x0D;&#x20;"
				name="Q{x-urn:test:use-uqname}param-items" select="'xyz'" />
		</x:call>
		<x:expect label="should be possible" select="$x:result treat as xs:string"
			test="$x:result treat as xs:string" />
	</x:scenario>

	<x:param
		name="
			&#x09;&#x0A;&#x0D;&#x20;
			Q{x-urn:test:use-uqname}global-param
			&#x09;&#x0A;&#x0D;&#x20;">
		<global-param-child />
	</x:param>
	<x:scenario label="Using URIQualifiedName in global-param @name">
		<x:call function="false" />
		<x:expect label="should be possible as well as in assertion @select and @test"
			select="$Q{x-urn:test:use-uqname}global-param treat as element(global-param-child)"
			test="$Q{x-urn:test:use-uqname}global-param treat as element(global-param-child)" />
		<x:expect label="and boolean @test"
			test="$Q{x-urn:test:use-uqname}global-param instance of element(global-param-child)" />
	</x:scenario>

	<x:param
		as="
			&#x09;&#x0A;&#x0D;&#x20;
			Q{http://www.w3.org/2001/XMLSchema}string
			&#x09;&#x0A;&#x0D;&#x20;"
		name="Q{x-urn:test:use-uqname}global-string-param" select="'xyz'" />
	<x:scenario label="Using URIQualifiedName in global-param @as">
		<x:call function="false" />
		<x:expect label="should be possible"
			select="$Q{x-urn:test:use-uqname}global-string-param treat as xs:string"
			test="$Q{x-urn:test:use-uqname}global-string-param treat as xs:string" />
	</x:scenario>

	<x:variable as="element(global-var-child)"
		name="
			&#x09;&#x0A;&#x0D;&#x20;
			Q{http://example.org/ns/my/variable}global-var
			&#x09;&#x0A;&#x0D;&#x20;"
		select="/Q{}global-var-child">
		<global-var-child />
	</x:variable>
	<x:scenario label="Using URIQualifiedName in global variable @name and @select">
		<x:call function="false" />
		<x:expect label="should be possible as well as in assertion @select and @test"
			select="$Q{http://example.org/ns/my/variable}global-var treat as element(Q{}global-var-child)"
			test="$Q{http://example.org/ns/my/variable}global-var treat as element(Q{}global-var-child)" />
		<x:expect label="and boolean @test"
			test="$Q{http://example.org/ns/my/variable}global-var instance of element(Q{}global-var-child)"
		 />
	</x:scenario>
	<x:variable
		as="
			&#x09;&#x0A;&#x0D;&#x20;
			Q{http://www.w3.org/2001/XMLSchema}string
			&#x09;&#x0A;&#x0D;&#x20;"
		name="Q{http://example.org/ns/my/variable}global-string-var" select="'xyz'" />
	<x:scenario label="Using URIQualifiedName in global variable @as">
		<x:call function="false" />
		<x:expect label="should be possible"
			select="$Q{http://example.org/ns/my/variable}global-string-var treat as xs:string"
			test="$Q{http://example.org/ns/my/variable}global-string-var treat as xs:string" />
	</x:scenario>

	<x:scenario label="Using URIQualifiedName in local variable @name and @select">
		<x:variable as="element(variable-child)"
			name="
				&#x09;&#x0A;&#x0D;&#x20;
				Q{http://example.org/ns/my/variable}var
				&#x09;&#x0A;&#x0D;&#x20;"
			select="/Q{}variable-child">
			<variable-child />
		</x:variable>
		<x:call function="Q{x-urn:test:use-uqname}param-mirror-function">
			<x:param name="Q{x-urn:test:use-uqname}param-items"
				select="$Q{http://example.org/ns/my/variable}var" />
		</x:call>
		<x:expect label="should be possible as well as in function-param @select">
			<variable-child />
		</x:expect>
		<x:expect label="and assertion @select and @test"
			select="$Q{http://example.org/ns/my/variable}var treat as element(Q{}variable-child)"
			test="$Q{http://example.org/ns/my/variable}var treat as element(Q{}variable-child)" />
		<x:expect label="and boolean @test"
			test="$Q{http://example.org/ns/my/variable}var instance of element(variable-child)" />
	</x:scenario>

	<x:scenario
		label="Using URIQualifiedName in local variable @name, with local part 'result' and non-XSpec namespace,">
		<x:call function="Q{x-urn:test:use-uqname}param-mirror-function">
			<x:param select="'result of function call'" />
		</x:call>
		<x:variable as="element(variable-child)" name="Q{http://example.org/ns/my/variable}result"
			select="/Q{}variable-child">
			<variable-child />
		</x:variable>
		<x:expect label="has no conflict with $x:result"
			select="$Q{http://example.org/ns/my/variable}result treat as element(Q{}variable-child)"
			test="$Q{http://example.org/ns/my/variable}result treat as element(Q{}variable-child)" />
		<x:expect label="while $x:result is preserved"
			test="($x:result eq 'result of function call') and
			($Q{http://www.jenitennison.com/xslt/xspec}result eq 'result of function call')"
		 />
	</x:scenario>

	<x:scenario label="Using URIQualifiedName in local variable @as">
		<x:variable
			as="
				&#x09;&#x0A;&#x0D;&#x20;
				Q{http://www.w3.org/2001/XMLSchema}string
				&#x09;&#x0A;&#x0D;&#x20;"
			name="Q{http://example.org/ns/my/variable}string-var" select="'xyz'" />
		<x:call function="false" />
		<x:expect label="should be possible"
			select="$Q{http://example.org/ns/my/variable}string-var treat as xs:string"
			test="$Q{http://example.org/ns/my/variable}string-var treat as xs:string" />
	</x:scenario>

</x:description>
