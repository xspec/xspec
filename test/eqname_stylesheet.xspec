<?xml version="1.0" encoding="UTF-8"?>
<!--
	no-prefix_stylesheet.xspec copies this file for testing no-prefix cases.
	When modifying this file, check whether no-prefix_stylesheet.xspec needs any additions or updates.
-->
<x:description stylesheet="eqname.xsl" xmlns:myv="http://example.org/ns/my/variable"
	xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!-- Leading and trailing &#x09;&#x0A;&#x0D;&#x20; inserted to names deliberately -->

	<x:scenario label="Using EQName in">
		<x:scenario label="context @mode and template-param @name">
			<x:context
				mode="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{x-urn:test:eqname}param-mirror-mode
					&#x09;&#x0A;&#x0D;&#x20;">
				<x:param
					name="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{x-urn:test:eqname}param-items
						&#x09;&#x0A;&#x0D;&#x20;">
					<template-param-child />
				</x:param>
				<context-child />
			</x:context>
			<x:expect label="should be possible">
				<template-param-child />
			</x:expect>
		</x:scenario>

		<x:scenario label="context @select and template-param @select">
			<x:variable as="element(context-child)" name="myv:context" select="/Q{}context-child">
				<context-child />
			</x:variable>
			<x:variable as="element(variable-child)" name="myv:var" select="/Q{}variable-child">
				<variable-child />
			</x:variable>
			<x:context mode="Q{x-urn:test:eqname}param-mirror-mode"
				select="$Q{http://example.org/ns/my/variable}context">
				<x:param name="Q{x-urn:test:eqname}param-items"
					select="$Q{http://example.org/ns/my/variable}var" />
			</x:context>
			<x:expect label="should be possible">
				<variable-child />
			</x:expect>
		</x:scenario>

		<x:scenario label="template-call @template and template-param @name">
			<x:call
				template="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{x-urn:test:eqname}param-mirror-template
					&#x09;&#x0A;&#x0D;&#x20;">
				<x:param
					name="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{x-urn:test:eqname}param-items
						&#x09;&#x0A;&#x0D;&#x20;">
					<template-param-child />
				</x:param>
			</x:call>
			<x:expect label="should be possible">
				<template-param-child />
			</x:expect>
		</x:scenario>

		<x:scenario label="template-param @as">
			<x:call template="Q{x-urn:test:eqname}param-mirror-template">
				<x:param
					as="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{http://www.w3.org/2001/XMLSchema}string
						&#x09;&#x0A;&#x0D;&#x20;"
					name="Q{x-urn:test:eqname}param-items" select="'xyz'" />
			</x:call>
			<x:expect label="should be possible" select="$x:result treat as xs:string"
				test="$x:result treat as xs:string" />
		</x:scenario>

	</x:scenario>

</x:description>
