<?xml version="1.0" encoding="UTF-8"?>
<x:description query="x-urn:test:do-nothing" query-at="do-nothing.xquery"
	stylesheet="do-nothing.xsl" xmlns:x="http://www.jenitennison.com/xslt/xspec"
	xquery-version="3.1" xslt-version="3.0">

	<!-- @catch attribute of this shared scenario is just to see how the current
		implementation behaves. At the moment, setting @catch on a scenario has
		no effect on the scenario where the corresponding x:like occurs. -->
	<x:scenario catch="no" label="call-error" shared="yes">
		<x:call function="error">
			<x:param select="xs:QName('my-error-code')" />
			<x:param select="'my error description'" />
			<x:param select="'my', 'error', 'object'" />
		</x:call>
	</x:scenario>

	<x:scenario catch="no" label="Disable @catch explicitly">
		<x:scenario catch="yes" label="Enable @catch by overriding inheritance">

			<x:scenario label="function-scenario">
				<x:scenario label="Error in SUT">
					<x:like label="call-error" />
					<x:expect label="err:code" select="xs:QName('my-error-code')"
						test="$x:result?err?code treat as xs:QName" />
					<x:expect label="err:description" select="'my error description'"
						test="$x:result?err?description treat as xs:string" />
					<x:expect label="err:value" select="'my', 'error', 'object'"
						test="$x:result?err?value treat as xs:string+" />

					<!-- The error is raised by fn:error() at a line in the compiled stylsheet/query -->
					<x:expect label="err:module"
						test="matches($x:result?err?module treat as xs:string, '.+/xspec-catch-compiled\.(xq|xsl)$')" />
					<x:expect label="err:line-number"
						test="($x:result?err?line-number treat as xs:integer) ge 1" />
					<x:expect label="err:column-number"
						test="($x:result?err?column-number treat as xs:integer) ge 1" />

					<!-- TODO: $err:additional on XQuery -->
				</x:scenario>

				<x:scenario label="No error in SUT">
					<x:call function="exactly-one">
						<x:param select="'string returned from function'" />
					</x:call>
					<x:expect label="Returned item intact" select="'string returned from function'"
					 />
				</x:scenario>
			</x:scenario>

		</x:scenario>
	</x:scenario>

</x:description>
