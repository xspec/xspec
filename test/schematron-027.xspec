<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec" schematron="schematron/schematron-027.sch">
    
    <x:scenario label="rule followed">
        <x:context>
            <contrib>
                <aff type="first"/>
                <aff type="second"/>
            </contrib>
        </x:context>
        <x:expect-not-assert id="t01"/>
    </x:scenario>
    
    <x:scenario label="rule violated">
        <x:context>
            <contrib>
                <aff/>
            </contrib>
        </x:context>
        <x:expect-assert id="t01"/>
    </x:scenario>
    
    <x:scenario label="rule violated, location is simple">
        <x:context>
            <contrib>
                <aff/>
            </contrib>
        </x:context>
        <x:expect-assert id="t01" location="contrib/aff"/>
    </x:scenario>
    
    <x:scenario label="rule violated, location is specific">
        <x:context>
            <contrib>
                <aff/>
            </contrib>
        </x:context>
        <x:expect-assert id="t01" location="contrib[1]/aff[1]"/>
    </x:scenario>
    
    <x:scenario label="rule violated, location is specific 2">
        <x:context>
            <contrib>
                <aff type="first"/>
                <aff/>
            </contrib>
        </x:context>
        <x:expect-assert id="t01" location="contrib[1]/aff[2]"/>
    </x:scenario>
    
    <!-- 
        This scenario causes XSpec to terminate in XSpec versions 2.0.7 and 2.1.4, but not in prior versions.
        The error message is "XPDY0050: A sequence of more than one item is not allowed as the value in 'treat as'"
        because the location "contrib/aff" identifies two nodes, not one node as required to "treat as node()" for an "is" test.
        This scenario should fail because the result is ambiguous.
        The location XPath may be corrected to locate one node unambiguously so that the scenario passes.
    -->
    <x:scenario label="rule violated, location is ambiguous">
        <x:context>
            <contrib>
                <aff type="first"/>
                <aff/>
            </contrib>
        </x:context>
        <x:expect-assert id="t01" location="contrib/aff"/>
    </x:scenario>
    
</x:description>
