<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="mirror.xsl" xmlns:mirror="x-urn:test:mirror"
	xmlns:x="http://www.jenitennison.com/xslt/xspec">

	<!--
		xspec-utils_stylesheet.xspec uses this file for testing x:is-user-content().
		When modifying this file, check whether xspec-utils_stylesheet.xspec needs any additions or updates.
	-->

	<x:scenario label="In context template-param, only user-content attribute is AVT. So...">
		<x:scenario label="In //x:context/x:param/node(),">
			<x:context mode="mirror:param-mirror">
				<x:param name="param-items">
					<template-param-child attr="}}{false()}{{">}}{false()}{{</template-param-child>
				</x:param>
				<context-child />
			</x:context>
			<x:expect label="attribute is AVT." select="'}false{'"
				test="$x:result/self::template-param-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/self::template-param-child/text()/string()" />
		</x:scenario>

		<x:scenario label="In //x:context/x:param/doc(@href),">
			<x:context mode="mirror:param-mirror">
				<x:param href="xspec-avt.xml" name="param-items" />
				<context-child />
			</x:context>
			<x:expect label="attribute is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/text()/string()" />
		</x:scenario>
	</x:scenario>

	<x:scenario label="In context, only user-content attribute is AVT. So...">
		<x:scenario label="In //x:context/node(),">
			<x:context mode="mirror:context-mirror">
				<context-child attr="}}{false()}{{">}}{false()}{{</context-child>
			</x:context>
			<x:expect label="attribute is AVT." select="'}false{'"
				test="$x:result/self::context-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/self::context-child/text()/string()" />
		</x:scenario>

		<x:scenario label="In //x:context/doc(@href),">
			<x:context href="xspec-avt.xml" mode="mirror:context-mirror" />
			<x:expect label="attribute is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/text()/string()" />
		</x:scenario>
	</x:scenario>

	<x:scenario label="In template-call template-param, only user-content attribute is AVT. So...">
		<x:scenario label="In //x:call[@template]/x:param/node(),">
			<x:call template="mirror:param-mirror">
				<x:param name="param-items">
					<template-param-child attr="}}{false()}{{">}}{false()}{{</template-param-child>
				</x:param>
			</x:call>
			<x:expect label="attribute is AVT." select="'}false{'"
				test="$x:result/self::template-param-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/self::template-param-child/text()/string()" />
		</x:scenario>

		<x:scenario label="In //x:call[@template]/x:param/doc(@href),">
			<x:call template="mirror:param-mirror">
				<x:param href="xspec-avt.xml" name="param-items" />
			</x:call>
			<x:expect label="attribute is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/@attr/string()" />
			<x:expect label="text node is intact." select="'}}{false()}{{'"
				test="$x:result/href-doc-child/text()/string()" />
		</x:scenario>
	</x:scenario>

</x:description>
