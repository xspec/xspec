<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="do-nothing.xsl" xmlns:x="http://www.jenitennison.com/xslt/xspec"
	xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!--
		The test target (../src/common/namespace-utils.xsl) is included implicitly by the XSpec
		compiler. You don't need to specify it in /x:description/@stylesheet.
	-->

	<x:scenario label="Scenario for testing variable deq-namespace">
		<x:context />
		<x:expect label="xs:anyURI of 'deq' namespace URI"
			select="
				namespace-uri-for-prefix(
					'deq',
					doc(resolve-uri('../src/common/deep-equal.xsl', $x:xspec-uri))/element()
				)"
			test="$x:deq-namespace treat as xs:anyURI" />
	</x:scenario>

	<x:scenario label="Scenario for testing variable rep-namespace">
		<x:context />
		<x:expect label="xs:anyURI of 'rep' namespace URI"
			select="
				namespace-uri-for-prefix(
					'rep',
					doc(resolve-uri('../src/common/report-sequence.xsl', $x:xspec-uri))/element()
				)"
			test="$x:rep-namespace treat as xs:anyURI" />
	</x:scenario>

	<x:scenario label="Scenario for testing variable xs-namespace">
		<x:context />
		<x:expect label="xs:anyURI of 'xs' namespace URI"
			select="
				namespace-uri-for-prefix(
					'xs',
					doc(resolve-uri('../src/common/namespace-utils.xsl', $x:xspec-uri))/element()
				)"
			test="$x:xs-namespace treat as xs:anyURI" />
	</x:scenario>

	<x:scenario label="Scenario for testing variable xsl-namespace">
		<x:context />
		<x:expect label="xs:anyURI of 'xsl' namespace URI" select="doc('')/element() => namespace-uri()"
			test="$x:xsl-namespace treat as xs:anyURI" />
	</x:scenario>

	<x:scenario label="Scenario for testing function copy-of-namespaces">
		<x:call function="x:copy-of-namespaces">
			<x:param select="//*:input-element">
				<wrapper-element xmlns="wrapper-default-ns"
					xmlns:wrapper-prefix="wrapper-prefixed-ns">
					<input-element xmlns="default-ns" xmlns:prefix="prefixed-ns" />
				</wrapper-element>
			</x:param>
		</x:call>
		<x:expect label="Default namespace is copied" select="'default-ns'"
			test="$x:result[name() eq '']/string()" />
		<x:expect label="Prefixed namespace is copied" select="'prefixed-ns'"
			test="$x:result[name() eq 'prefix']/string()" />
		<x:expect label="Inherited prefixed namespace is copied" select="'wrapper-prefixed-ns'"
			test="$x:result[name() eq 'wrapper-prefix']/string()" />
		<x:expect label="'xml' namespace is not copied"
			test="
				$x:result[(name() eq 'xml') or (string() eq 'http://www.w3.org/XML/1998/namespace')]
				=> empty()"
		 />
	</x:scenario>

</x:description>
