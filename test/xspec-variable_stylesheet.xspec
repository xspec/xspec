<?xml version="1.0" encoding="UTF-8"?>
<!-- ===================================================================== -->
<!--  File:       test/xspec-variable_stylesheet.xspec                     -->
<!--  Tags:                                                                -->
<!--    Copyright (c) 2010 Jeni Tennison (see end of file.)                -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->


<x:description xmlns:t="http://www.jenitennison.com/xslt/xspec"
	xmlns:x="http://www.jenitennison.com/xslt/xspec"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:my="http://example.org/ns/my"
	xmlns:myv="http://example.org/ns/my/variable"
	stylesheet="xspec-variable-tested.xsl">
	<!-- Variables used only in this test file are in a dedicated namespace to prevent conflict with
	 global parameters or global variables in the file to be tested. -->
	<x:variable name="myv:test-data" href="xspec-variable.xml"/>
	<x:variable name="myv:test-3" select="$myv:test-data/*/test[xs:integer(@num) eq 3]"/>
	<x:variable name="myv:global-var-no-casting" select="xs:integer(5)"/>
	<x:variable name="myv:global-var-as-double" as="xs:double" select="xs:integer(5)"/>

	<!--XQuery needs mode=test:generate-variable-declarations fix.
	 TODO: When that's available, move "@select and element content" scenario to the
	 "Define variables in different ways" scenario in xspec-variable.xspec. -->
	<x:scenario label="Code that temporarily does not work in XQuery but does work in XSLT">
		<x:scenario label="@select and element content">
			<x:variable name="myv:select-and-content" select="//bar/@x">
				<xyz><bar x="y"/></xyz>
			</x:variable>
			<x:call function="my:foo">
				<x:param name="elem"><foo role="{$myv:select-and-content}"/></x:param>
				<x:param name="p" select="0"/>
				<x:param name="textnode"/>
			</x:call>
			<x:expect label="the result" test="$x:result/self::bar/@role/string()" select="'y'"/>
		</x:scenario>
	</x:scenario>

	<!-- Scenarios specific to XSLT -->

	<x:scenario label="Call variable in different forms of SUT">
		<!-- For test of local vars in function call, see xspec-variable.xspec. -->
		<x:scenario label="Call local vars in test of named template">
			<x:variable name="myv:role" select="'myrole'"/>
			<x:context><mycontext role="{$myv:role}"/></x:context>
			<x:variable name="myv:param" select="$myv:test-3/@num" as="xs:integer"/>
			<x:call template="foo">
				<x:param name="p" select="$myv:param"/>
			</x:call>
			<x:variable name="myv:expectedresult" select="$myv:test-3/@value" as="xs:integer"/>
			<x:expect label="the result" test="xs:integer($x:result/number)" select="$myv:expectedresult"/>
			<x:expect label="local variable referenced from context"  test="$x:result/@role/string()" select="'myrole'"/>
		</x:scenario>

		<x:scenario label="Call local vars in test of template rule">
			<x:variable name="myv:myparam" select="$myv:test-3/@num" as="xs:integer"/>
			<x:context>
				<x:param name="p" select="$myv:myparam"/>
				<foo/>
			</x:context>
			<x:variable name="myv:expectedresult" select="$myv:test-3/@value" as="xs:integer"/>
			<x:expect label="the result" test="xs:integer($x:result/number)" select="$myv:expectedresult"/>
		</x:scenario>
	</x:scenario>

	<!-- Should this scenario be moved to test/xspec-prefix-conflict_stylesheet.xspec after that is on master branch? -->
	<t:scenario label="Test that x: is available for use by end users (i.e., not hard-coded in tools)">
		<t:variable name="x:elementx" as="element()" xmlns:x="x-urn:test:xspec-prefix-conflict">
			<x:foo role="y"/>
		</t:variable>
		<t:context select="$x:elementx" xmlns:x="x-urn:test:xspec-prefix-conflict"/>
		<t:expect label="the result" test="exists(/bar[@role='y'])"/>
	</t:scenario>

</x:description>
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
<!-- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS COMMENT.             -->
<!--                                                                       -->
<!-- Copyright (c) 2010 Jeni Tennison                                      -->
<!--                                                                       -->
<!-- The contents of this file are subject to the MIT License (see the URI -->
<!-- http://www.opensource.org/licenses/mit-license.php for details).      -->
<!--                                                                       -->
<!-- Permission is hereby granted, free of charge, to any person obtaining -->
<!-- a copy of this software and associated documentation files (the       -->
<!-- "Software"), to deal in the Software without restriction, including   -->
<!-- without limitation the rights to use, copy, modify, merge, publish,   -->
<!-- distribute, sublicense, and/or sell copies of the Software, and to    -->
<!-- permit persons to whom the Software is furnished to do so, subject to -->
<!-- the following conditions:                                             -->
<!--                                                                       -->
<!-- The above copyright notice and this permission notice shall be        -->
<!-- included in all copies or substantial portions of the Software.       -->
<!--                                                                       -->
<!-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,       -->
<!-- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF    -->
<!-- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.-->
<!-- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY  -->
<!-- CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,  -->
<!-- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE     -->
<!-- SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                -->
<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
