<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:mirror="x-urn:test:mirror"
               xmlns:x="http://www.jenitennison.com/xslt/xspec"
               stylesheet="../../mirror.xsl">
  <!-- https://github.com/expath/xspec/issues/67
       test naming collision of external result files when a function returns a document containing more than 1000 node -->

  <x:scenario label="scenario 1">
    <x:call function="mirror:param-mirror">
      <x:param href="result-naming-collision.xml" />
    </x:call>
    <x:expect label="The result should be saved in an external file"
      href="result-naming-collision.xml" />
  </x:scenario>

  <x:scenario label="scenario 2">
    <x:call function="mirror:param-mirror">
      <x:param href="result-naming-collision.xml" />
    </x:call>
    <x:expect label="The result should be saved in another external file"
      href="result-naming-collision.xml" />
  </x:scenario>

  <x:scenario label="When the result consists of multiple elements (xspec/xspec#361)">
    <x:call function="mirror:param-mirror">
      <x:param href="result-naming-collision.xml" select="., ." />
    </x:call>

    <x:expect label="x:result should be two document nodes" select="2"
      test="count($x:result treat as document-node()+)" />

    <!-- In order to test well-formedness, this x:expect needs to have the reporter XSLT read the external XML.
      To realize it, x:expect needs to expect node()+ and fail deliberately. -->
    <x:expect select="wrap/entries">
      <x:label><![CDATA[
        - The result should be saved successfully in yet another external file which is well-formed
        - [Expected Result] should highlight only these differences:
          - "XPath /element() from" against @select="node()" in the external file
          - <entry>0</entry> against <entry>2</entry> in the 1st <entries> of the external files
          (Note that in the test result report XML, the two document nodes from $x:result are
          unwrapped and merged by "rep:report-sequence".)
      ]]></x:label>
      <wrap xml:space="preserve"><entries>
   <entry>1</entry>
   <entry>0</entry>
   <entry>3</entry>
   </entries></wrap>
    </x:expect>
  </x:scenario>
</x:description>
