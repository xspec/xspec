<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec" stylesheet="../../do-nothing.xsl">
  <!-- https://github.com/expath/xspec/issues/67
       test naming collision of external result files when a function returns a document containing more than 1000 node -->

  <x:scenario label="scenario 1">
    <x:call function="exactly-one">
      <x:param href="xspec-result-naming-collision.xml" />
    </x:call>
    <x:expect label="The result should be saved in an external file"
      href="xspec-result-naming-collision.xml" />
  </x:scenario>

  <x:scenario label="scenario 2">
    <x:call function="exactly-one">
      <x:param href="xspec-result-naming-collision.xml" />
    </x:call>
    <x:expect label="The result should be saved in another external file"
      href="xspec-result-naming-collision.xml" />
  </x:scenario>

  <x:scenario label="When the result consists of multiple elements (xspec/xspec#361)">
    <x:call function="one-or-more">
      <x:param href="xspec-result-naming-collision.xml" select="., ." />
    </x:call>

    <x:expect label="x:result should be two document nodes" select="2"
      test="count($x:result treat as document-node()+)" />

    <!-- In order to test well-formedness, this x:expect needs to have the reporter XSLT read the external XML.
      To realize it, x:expect needs to expect node()+ and fail deliberately. -->
    <x:expect label="The result should be saved successfully in yet another external file which is well-formed">
      <foo />
    </x:expect>
  </x:scenario>
</x:description>
