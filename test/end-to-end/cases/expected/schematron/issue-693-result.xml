<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../issue-693.xspec"
        stylesheet="issue-693-sch-preprocessed.xsl"
        schematron="../../issue-693.sch"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../issue-693.xspec">
      <label>Using user-content (not @href) in x:context should work</label>
      <input-wrap xmlns="">
         <x:context xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    select="self::document-node()">
            <foo>
               <bar/>
               <!--<baz />-->
            </foo>
         </x:context>
      </input-wrap>
      <result select="/element()">
         <content-wrap xmlns="">
            <svrl:schematron-output xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
                                    xmlns:sch="http://purl.oclc.org/dsdl/schematron"
                                    xmlns:error="https://doi.org/10.5281/zenodo.1495494#error"
                                    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
                                    xmlns:schxslt-api="https://doi.org/10.5281/zenodo.1495494#api"
                                    xmlns:schxslt="https://doi.org/10.5281/zenodo.1495494"
                                    xmlns:xs="http://www.w3.org/2001/XMLSchema">
               <svrl:metadata xmlns:dct="http://purl.org/dc/terms/"
                              xmlns:skos="http://www.w3.org/2004/02/skos/core#">
                  <dct:creator>
                     <dct:Agent>
                        <skos:prefLabel>Unknown</skos:prefLabel>
                     </dct:Agent>
                  </dct:creator>
                  <dct:created>2000-01-01T00:00:00Z</dct:created>
                  <dct:source>
                     <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/">
                        <dct:creator>
                           <dct:Agent>
                              <skos:prefLabel>SchXslt/1.6.2 SAXON/product-version</skos:prefLabel>
                              <schxslt.compile.typed-variables xmlns="https://doi.org/10.5281/zenodo.1495494#">true</schxslt.compile.typed-variables>
                           </dct:Agent>
                        </dct:creator>
                        <dct:created>2000-01-01T00:00:00Z</dct:created>
                     </rdf:Description>
                  </dct:source>
               </svrl:metadata>
               <svrl:active-pattern documents="issue-693-compiled.xsl"/>
               <svrl:fired-rule context="foo"/>
               <svrl:successful-report location="/Q{}foo[1]" id="bar-exists" test="bar">
                  <svrl:text>Found bar</svrl:text>
               </svrl:successful-report>
            </svrl:schematron-output>
         </content-wrap>
      </result>
      <test id="scenario1-expect1" successful="true">
         <label>This expectation should be Success report bar-exists</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      test="exists(Q{http://purl.oclc.org/dsdl/svrl}schematron-output/Q{http://purl.oclc.org/dsdl/svrl}successful-report[(@id, preceding-sibling::Q{http://purl.oclc.org/dsdl/svrl}fired-rule[1]/@id, preceding-sibling::Q{http://purl.oclc.org/dsdl/svrl}active-pattern[1]/@id)[1] = 'bar-exists'])"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
      <test id="scenario1-expect2" successful="false">
         <label>This expectation should be Failure and the failure report should contain svrl:active-pattern/@document[. = ''] report baz-exists</label>
         <expect-test-wrap xmlns="">
            <x:expect xmlns:x="http://www.jenitennison.com/xslt/xspec"
                      test="exists(Q{http://purl.oclc.org/dsdl/svrl}schematron-output/Q{http://purl.oclc.org/dsdl/svrl}successful-report[(@id, preceding-sibling::Q{http://purl.oclc.org/dsdl/svrl}fired-rule[1]/@id, preceding-sibling::Q{http://purl.oclc.org/dsdl/svrl}active-pattern[1]/@id)[1] = 'baz-exists'])"/>
         </expect-test-wrap>
         <expect select="()"/>
      </test>
   </scenario>
</report>
