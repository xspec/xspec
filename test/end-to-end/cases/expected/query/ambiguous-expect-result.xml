<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../ambiguous-expect.xspec"
        query="x-urn:test:mirror"
        query-at="../../../../mirror.xqm"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../ambiguous-expect.xspec">
      <label>Scenario for verifying that boolean @test precedes @href</label>
      <scenario id="scenario1-scenario1" xspec="../../ambiguous-expect.xspec">
         <label>When function returns true,</label>
         <input-wrap xmlns="">
            <x:call xmlns:mirror="x-urn:test:mirror"
                    xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="mirror:true"/>
         </input-wrap>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('true')"/>
         <test id="scenario1-scenario1-expect1" successful="false">
            <label>Expecting document node via @href should be Failure</label>
            <expect select="/self::document-node()">
               <content-wrap xmlns="">
                  <foo/>
               </content-wrap>
            </expect>
         </test>
         <test id="scenario1-scenario1-expect2" successful="true">
            <label>Expecting document node via @href along with @test=$x:result should be Success</label>
            <expect-test-wrap xmlns="">
               <x:expect xmlns:mirror="x-urn:test:mirror"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xmlns:x="http://www.jenitennison.com/xslt/xspec"
                         test="$x:result treat as xs:boolean"/>
            </expect-test-wrap>
            <expect select="/self::document-node()">
               <content-wrap xmlns="">
                  <foo/>
               </content-wrap>
            </expect>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario2" xspec="../../ambiguous-expect.xspec">
      <label>Scenario for verifying that boolean @test precedes @select</label>
      <scenario id="scenario2-scenario1" xspec="../../ambiguous-expect.xspec">
         <label>When function returns false,</label>
         <input-wrap xmlns="">
            <x:call xmlns:mirror="x-urn:test:mirror"
                    xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="mirror:false"/>
         </input-wrap>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
         <test id="scenario2-scenario1-expect1" successful="true">
            <label>Expecting false via @select should be Success</label>
            <expect select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
         </test>
         <test id="scenario2-scenario1-expect2" successful="false">
            <label>Expecting false via @select along with @test=$x:result should be Failure</label>
            <expect-test-wrap xmlns="">
               <x:expect xmlns:mirror="x-urn:test:mirror"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xmlns:x="http://www.jenitennison.com/xslt/xspec"
                         test="$x:result treat as xs:boolean"/>
            </expect-test-wrap>
            <expect select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario3" xspec="../../ambiguous-expect.xspec">
      <label>Scenario for verifying that boolean @test precedes child node</label>
      <scenario id="scenario3-scenario1" xspec="../../ambiguous-expect.xspec">
         <label>When function returns true,</label>
         <input-wrap xmlns="">
            <x:call xmlns:mirror="x-urn:test:mirror"
                    xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="mirror:true"/>
         </input-wrap>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('true')"/>
         <test id="scenario3-scenario1-expect1" successful="false">
            <label>Expecting element(foo) via child node should be Failure</label>
            <expect select="/element()">
               <content-wrap xmlns="">
                  <foo xmlns:mirror="x-urn:test:mirror"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
               </content-wrap>
            </expect>
         </test>
         <test id="scenario3-scenario1-expect2" successful="true">
            <label>Expecting element(foo) via child node along with @test=$x:result should be Success</label>
            <expect-test-wrap xmlns="">
               <x:expect xmlns:mirror="x-urn:test:mirror"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xmlns:x="http://www.jenitennison.com/xslt/xspec"
                         test="$x:result treat as xs:boolean"/>
            </expect-test-wrap>
            <expect select="/element()">
               <content-wrap xmlns="">
                  <foo xmlns:mirror="x-urn:test:mirror"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec"
                       xmlns:xs="http://www.w3.org/2001/XMLSchema"/>
               </content-wrap>
            </expect>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario4" xspec="../../ambiguous-expect.xspec">
      <label>Scenario for verifying that boolean @test precedes empty sequence (no @href, @select or child node)</label>
      <scenario id="scenario4-scenario1" xspec="../../ambiguous-expect.xspec">
         <label>When function returns true,</label>
         <input-wrap xmlns="">
            <x:call xmlns:mirror="x-urn:test:mirror"
                    xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="mirror:true"/>
         </input-wrap>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('true')"/>
         <test id="scenario4-scenario1-expect1" successful="false">
            <label>Expecting empty sequence (no @href, @select or child node) should be Failure</label>
            <expect select="()"/>
         </test>
         <test id="scenario4-scenario1-expect2" successful="false">
            <label>Ditto using x:label</label>
            <expect select="()"/>
         </test>
         <test id="scenario4-scenario1-expect3" successful="true">
            <label>Expecting empty sequence (no @href, @select or child node) along with @test=$x:result should be Success</label>
            <expect-test-wrap xmlns="">
               <x:expect xmlns:mirror="x-urn:test:mirror"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xmlns:x="http://www.jenitennison.com/xslt/xspec"
                         test="$x:result treat as xs:boolean"/>
            </expect-test-wrap>
            <expect select="()"/>
         </test>
         <test id="scenario4-scenario1-expect4" successful="true">
            <label>Ditto using x:label</label>
            <expect-test-wrap xmlns="">
               <x:expect xmlns:mirror="x-urn:test:mirror"
                         xmlns:xs="http://www.w3.org/2001/XMLSchema"
                         xmlns:x="http://www.jenitennison.com/xslt/xspec"
                         test="$x:result treat as xs:boolean"/>
            </expect-test-wrap>
            <expect select="()"/>
         </test>
      </scenario>
   </scenario>
</report>
