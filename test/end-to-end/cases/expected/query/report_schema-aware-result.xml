<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../report_schema-aware.xspec"
        query="x-urn:test:do-nothing"
        query-at="../../../../do-nothing.xqm"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../report_schema-aware.xspec">
      <label>In a failure report HTML</label>
      <scenario id="scenario1-scenario1" xspec="../../report_schema-aware.xspec">
         <label>Derived string types</label>
         <scenario id="scenario1-scenario1-scenario1"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:ID</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:ID">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario1-expect1" successful="false">
               <label>[Result] must represent it by "xs:ID('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario2"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:IDREF</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:IDREF">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario2-expect1" successful="false">
               <label>[Result] must represent it by "xs:IDREF('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario3"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:ENTITY</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:ENTITY">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario3-expect1" successful="false">
               <label>[Result] must represent it by "xs:ENTITY('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario4"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:NCName</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:NCName">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario4-expect1" successful="false">
               <label>[Result] must represent it by "xs:NCName('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario5"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:language</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:language">
               <x:param select="'en'"/>
            </x:call>
            <result select="'en'"/>
            <test id="scenario1-scenario1-scenario5-expect1" successful="false">
               <label>[Result] must represent it by "xs:language('en')" (XSLT) or "'en'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario6"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:Name</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:Name">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario6-expect1" successful="false">
               <label>[Result] must represent it by "xs:Name('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario7"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:NMTOKEN</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:NMTOKEN">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario7-expect1" successful="false">
               <label>[Result] must represent it by "xs:NMTOKEN('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario8"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:token</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:token">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario8-expect1" successful="false">
               <label>[Result] must represent it by "xs:token('foo')" (XSLT) or "'foo'"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario1-scenario9"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:normalizedString</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:normalizedString">
               <x:param select="'foo'"/>
            </x:call>
            <result select="'foo'"/>
            <test id="scenario1-scenario1-scenario9-expect1" successful="false">
               <label>[Result] must represent it by "xs:normalizedString('foo')" (XSLT) or
						"'foo'" (XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
      <scenario id="scenario1-scenario2" xspec="../../report_schema-aware.xspec">
         <label>Derived numeric types</label>
         <scenario id="scenario1-scenario2-scenario1"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:negativeInteger</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:negativeInteger">
               <x:param select="-1"/>
            </x:call>
            <result select="-1"/>
            <test id="scenario1-scenario2-scenario1-expect1" successful="false">
               <label>[Result] must represent it by "xs:negativeInteger(-1)" (XSLT) or "-1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario2"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:nonPositiveInteger</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:nonPositiveInteger">
               <x:param select="0"/>
            </x:call>
            <result select="0"/>
            <test id="scenario1-scenario2-scenario2-expect1" successful="false">
               <label>[Result] must represent it by "xs:nonPositiveInteger(0)" (XSLT) or "0"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario3"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:byte</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:byte">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario3-expect1" successful="false">
               <label>[Result] must represent it by "xs:byte(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario4"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:short</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:short">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario4-expect1" successful="false">
               <label>[Result] must represent it by "xs:short(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario5"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:int</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:int">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario5-expect1" successful="false">
               <label>[Result] must represent it by "xs:int(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario6"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:long</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:long">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario6-expect1" successful="false">
               <label>[Result] must represent it by "xs:long(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario7"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:unsignedByte</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:unsignedByte">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario7-expect1" successful="false">
               <label>[Result] must represent it by "xs:unsignedByte(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario8"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:unsignedShort</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:unsignedShort">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario8-expect1" successful="false">
               <label>[Result] must represent it by "xs:unsignedShort(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario9"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:unsignedInt</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:unsignedInt">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario9-expect1" successful="false">
               <label>[Result] must represent it by "xs:unsignedInt(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario10"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:unsignedLong</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:unsignedLong">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario10-expect1" successful="false">
               <label>[Result] must represent it by "xs:unsignedLong(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario11"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:positiveInteger</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:positiveInteger">
               <x:param select="1"/>
            </x:call>
            <result select="1"/>
            <test id="scenario1-scenario2-scenario11-expect1" successful="false">
               <label>[Result] must represent it by "xs:positiveInteger(1)" (XSLT) or "1"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario1-scenario2-scenario12"
                   xspec="../../report_schema-aware.xspec">
            <label>xs:nonNegativeInteger</label>
            <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                    xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="xs:nonNegativeInteger">
               <x:param select="0"/>
            </x:call>
            <result select="0"/>
            <test id="scenario1-scenario2-scenario12-expect1" successful="false">
               <label>[Result] must represent it by "xs:nonNegativeInteger(0)" (XSLT) or "0"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
   </scenario>
</report>
