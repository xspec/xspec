<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../report.xspec"
        query="x-urn:test:mirror"
        query-at="../../../../mirror.xqm"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../report.xspec">
      <label>Function (xspec/xspec#355)</label>
      <scenario id="scenario1-scenario1" xspec="../../report.xspec">
         <label>Array</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="array(*)" select="['foo', 1, [2, 'bar']]"/>
            </x:call>
         </input-wrap>
         <result select="/*">
            <pseudo-array>["foo",1,[2,"bar"]]</pseudo-array>
         </result>
         <test id="scenario1-scenario1-expect1" successful="false">
            <label>Serialized array should be reported upon failure</label>
            <expect select="()"/>
         </test>
      </scenario>
      <scenario id="scenario1-scenario2" xspec="../../report.xspec">
         <label>Map</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="map(*)" select="      map {       'foo': 1,       2: 'bar'      }"/>
            </x:call>
         </input-wrap>
         <result select="/*">
            <pseudo-map>map{2:"bar","foo":1}</pseudo-map>
         </result>
         <test id="scenario1-scenario2-expect1" successful="false">
            <label>Serialized map should be reported upon failure</label>
            <expect select="()"/>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario2" xspec="../../report.xspec">
      <label>Element, attribute (xspec/xspec#357)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="node()+" select="elem1 | elem2/attribute()">
               <elem1>text</elem1>
               <elem2 attr="attr-val"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/(@* | node())">
         <pseudo-element>
            <elem1 xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns="">text</elem1>
         </pseudo-element>
         <pseudo-attribute attr="attr-val"/>
      </result>
      <test id="scenario2-expect1" successful="false">
         <label>@attr should be reported as an attribute</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario3" xspec="../../report.xspec">
      <label>Attributes of the same name (xspec/xspec#358)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="attribute()+" select="element()/attribute()">
               <elem1 attr="foo"/>
               <elem2 attr="bar"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/@*">
         <pseudo-attribute attr="foo"/>
         <pseudo-attribute attr="bar"/>
      </result>
      <test id="scenario3-expect1" successful="false">
         <label>Both @attr=foo and @attr=bar should be reported</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario4" xspec="../../report.xspec">
      <label>Attribute, element, attribute (xspec/xspec#360)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="node()+" select="element()/attribute() | elem2">
               <elem1 attr1="attr1-val"/>
               <elem2>text</elem2>
               <elem3 attr3="attr3-val"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/(@* | node())">
         <pseudo-attribute attr1="attr1-val"/>
         <pseudo-element>
            <elem2 xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns="">text</elem2>
         </pseudo-element>
         <pseudo-attribute attr3="attr3-val"/>
      </result>
      <test id="scenario4-expect1" successful="false">
         <label>[Result] should be reported</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario5" xspec="../../report.xspec">
      <label>Document node with no children (xspec/xspec#697)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param select="parse-xml-fragment('')"/>
         </x:call>
      </input-wrap>
      <result select="/self::document-node()"/>
      <test id="scenario5-expect1" successful="false">
         <label>XPath should be reported between Result title and box</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario6" xspec="../../report.xspec">
      <label>XPath is different, but serialized node looks as if same</label>
      <scenario id="scenario6-scenario1" xspec="../../report.xspec">
         <label>[Result] = document node, [Expected Result] = element</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="document-node()" select="/">
                  <test/>
               </x:param>
            </x:call>
         </input-wrap>
         <result select="/self::document-node()">
            <test xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns=""/>
         </result>
         <test id="scenario6-scenario1-expect1" successful="false">
            <label>XPath should be colored as different. Serialized node should be colored as same.</label>
            <expect select="/element()">
               <test xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns=""/>
            </expect>
         </test>
      </scenario>
      <scenario id="scenario6-scenario2" xspec="../../report.xspec">
         <label>[Result] = element, [Expected Result] = document node.</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="element()">
                  <test/>
               </x:param>
            </x:call>
         </input-wrap>
         <result select="/element()">
            <test xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns=""/>
         </result>
         <test id="scenario6-scenario2-expect1" successful="false">
            <label>XPath should be colored as different. Serialized node should be colored as same.</label>
            <expect select="/self::document-node()">
               <test xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns=""/>
            </expect>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario7" xspec="../../report.xspec">
      <label>Sequence of multiple atomic values</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param select="'foo', 1, 2, 'bar'"/>
         </x:call>
      </input-wrap>
      <result select="'foo',&#xA;1,&#xA;2,&#xA;'bar'"/>
      <test id="scenario7-expect1" successful="false">
         <label>Atomic values in [Result] and [Expected Result] are separated by comma and new line</label>
         <expect select="QName('', 'foo'),&#xA;1,&#xA;2,&#xA;'bar'"/>
      </test>
   </scenario>
</report>
