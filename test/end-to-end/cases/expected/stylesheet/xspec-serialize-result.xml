<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../src/reporter/format-xspec-report.xsl"?>
<x:report xmlns:test="http://www.jenitennison.com/xslt/unit-test"
          xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns:x="http://www.jenitennison.com/xslt/xspec"
          stylesheet="../../../../items.xsl"
          date="2000-01-01T00:00:00Z"
          xspec="../../xspec-serialize.xspec">
   <x:scenario>
      <x:label>When the result is a comment node, the report HTML must serialize it as
			&lt;!-- --&gt;. (xspec/xspec#356) So...</x:label>
      <x:scenario>
         <x:label>When x:result in the report XML contains a comment node,</x:label>
         <x:call function="exactly-one">
            <x:param select="$Q{x-urn:test:xspec-items}comment"/>
         </x:call>
         <x:result select="/comment()"><!--comment-text--></x:result>
         <x:test successful="false">
            <x:label>[Result] with diff must be serialized as &lt;!-- --&gt;.</x:label>
            <x:expect select="()"/>
         </x:test>
         <x:test successful="false">
            <x:label>[Result] without diff must be serialized as &lt;!-- --&gt;.</x:label>
            <x:expect test="false()" select="()"/>
         </x:test>
      </x:scenario>
      <x:scenario>
         <x:label>When x:expect in the report XML contains a comment node,</x:label>
         <x:call function="false"/>
         <x:result select="xs:boolean('false')"/>
         <x:test successful="false">
            <x:label>[Expected Result] with diff must be serialized as
					&lt;!-- --&gt;.</x:label>
            <x:expect select="/comment()"><!--comment-text--></x:expect>
         </x:test>
      </x:scenario>
   </x:scenario>
   <x:scenario>
      <x:label>When the result is indented in the report XML file, the report HTML must serialize
			it with indentation.</x:label>
      <x:scenario>
         <x:label>So... (xspec/xspec#359)</x:label>
         <x:scenario>
            <x:label>When x:result in the report XML file is a sequence of simple nested
					elements serialized with indentation,</x:label>
            <x:call function="one-or-more">
               <x:param as="element()+">
                  <foo/>
                  <bar>
                     <baz/>
                  </bar>
                  <qux>
                     <quux/>
                  </qux>
               </x:param>
            </x:call>
            <x:result select="/element()">
               <foo/>
               <bar>
                  <baz/>
               </bar>
               <qux>
                  <quux/>
               </qux>
            </x:result>
            <x:test successful="false">
               <x:label>all elements in [Result] with diff must be serialized with
						indentation.</x:label>
               <x:expect select="()"/>
            </x:test>
            <x:test successful="false">
               <x:label>all elements in [Result] without diff must be serialized with
						indentation.</x:label>
               <x:expect test="false()" select="()"/>
            </x:test>
         </x:scenario>
         <x:scenario>
            <x:label>When x:expect in the report XML file is a sequence of simple nested
					elements serialized with indentation,</x:label>
            <x:call function="false"/>
            <x:result select="xs:boolean('false')"/>
            <x:test successful="false">
               <x:label>all elements in [Expected Result] with diff must be serialized with
						indentation.</x:label>
               <x:expect select="/element()">
                  <foo/>
                  <bar>
                     <baz/>
                  </bar>
                  <qux>
                     <quux/>
                  </qux>
               </x:expect>
            </x:test>
         </x:scenario>
      </x:scenario>
      <x:scenario>
         <x:label>But the diff must not be affected by indentation. So...</x:label>
         <x:scenario>
            <x:label>When a node is indented, the diff of the indented node itself must not be
					affected. (xspec/xspec#367) So...</x:label>
            <x:scenario>
               <x:label>When &lt;bar&gt; is indented but &lt;?bar?&gt; is not indented in
						x:result of the report XML file,</x:label>
               <x:call function="exactly-one">
                  <x:param as="element(test)">
                     <test>
                        <elem1><!--foo-->
                           <bar/>
                        </elem1>
                        <elem2><!--foo--><?bar?></elem2>
                     </test>
                  </x:param>
               </x:call>
               <x:result select="/element()">
                  <test>
                     <elem1><!--foo-->
                        <bar/>
                     </elem1>
                     <elem2><!--foo--><?bar?></elem2>
                  </test>
               </x:result>
               <x:test successful="false">
                  <x:label>both &lt;bar&gt; and &lt;?bar?&gt; must be green.</x:label>
                  <x:expect select="/element()">
                     <test>
                        <elem1>foo<bar/>
                        </elem1>
                        <elem2>foo<?bar?></elem2>
                     </test>
                  </x:expect>
               </x:test>
            </x:scenario>
            <x:scenario>
               <x:label>When &lt;bar&gt; is indented but &lt;?bar?&gt; is not indented in
						x:expect of the report XML file,</x:label>
               <x:call function="exactly-one">
                  <x:param as="element(test)">
                     <test>
                        <elem1>foo<bar/>
                        </elem1>
                        <elem2>foo<?bar?></elem2>
                     </test>
                  </x:param>
               </x:call>
               <x:result select="/element()">
                  <test>
                     <elem1>foo<bar/>
                     </elem1>
                     <elem2>foo<?bar?></elem2>
                  </test>
               </x:result>
               <x:test successful="false">
                  <x:label>both &lt;bar&gt; and &lt;?bar?&gt; must be green.</x:label>
                  <x:expect select="/element()">
                     <test>
                        <elem1><!--foo-->
                           <bar/>
                        </elem1>
                        <elem2><!--foo--><?bar?></elem2>
                     </test>
                  </x:expect>
               </x:test>
            </x:scenario>
         </x:scenario>
         <x:scenario>
            <x:label>When a child node of an element is indented, the diff of the element must
					not be affected.</x:label>
            <x:scenario>
               <x:label>So, when the same &lt;bar&gt; in &lt;foo&gt; is indented in x:result
						and x:expect of the report XML file with different indentation
						length,</x:label>
               <x:call function="exactly-one">
                  <x:param as="element(test)">
                     <test>
                        <foo>
                           <bar/>
                        </foo>
                        <baz/>
                     </test>
                  </x:param>
               </x:call>
               <x:result select="/element()">
                  <test>
                     <foo>
                        <bar/>
                     </foo>
                     <baz/>
                  </test>
               </x:result>
               <x:test successful="false">
                  <x:label>&lt;foo&gt; must be green.</x:label>
                  <x:expect select="/element()">
                     <test>
                        <foo>
                           <bar/>
                        </foo>
                        <qux/>
                     </test>
                  </x:expect>
               </x:test>
            </x:scenario>
         </x:scenario>
      </x:scenario>
   </x:scenario>
   <x:scenario>
      <x:label>When x:expect has an element of '...',</x:label>
      <x:call function="exactly-one">
         <x:param as="element(foo)">
            <foo>
               <bar/>
               <baz/>
            </foo>
         </x:param>
      </x:call>
      <x:result select="/element()">
         <foo>
            <bar/>
            <baz/>
         </foo>
      </x:result>
      <x:test successful="false">
         <x:label>the corresponding nodes in [Result] with diff must be serialized in green.
				(xspec/xspec#379)</x:label>
         <x:expect select="/element()">
            <foo>...</foo>
            <qux/>
         </x:expect>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>When the result contains significant text nodes,</x:label>
      <x:call function="exactly-one">
         <x:param as="element(test)">
            <test>
               <oridinary-text-node>
                  <same>same</same>
                  <diff>actual</diff>
               </oridinary-text-node>
               <significant-whitespace-only-text-node>
                  <same xml:space="preserve">	
&#xD; </same>
                  <diff xml:space="preserve">	
&#xD; </diff>
               </significant-whitespace-only-text-node>
            </test>
         </x:param>
      </x:call>
      <x:result select="/element()">
         <test>
            <oridinary-text-node>
               <same>same</same>
               <diff>actual</diff>
            </oridinary-text-node>
            <significant-whitespace-only-text-node>
               <same xml:space="preserve"><test:ws>	
&#xD; </test:ws></same>
               <diff xml:space="preserve"><test:ws>	
&#xD; </test:ws></diff>
            </significant-whitespace-only-text-node>
         </test>
      </x:result>
      <x:test successful="false">
         <x:label>both in [Result] and [Expected Result] with diff, the significant text nodes
				must be serialized with color. (xspec/xspec#386)</x:label>
         <x:expect select="/element()">
            <test>
               <oridinary-text-node>
                  <same>same</same>
                  <diff>expect</diff>
               </oridinary-text-node>
               <significant-whitespace-only-text-node>
                  <same xml:space="preserve"><test:ws>	
&#xD; </test:ws></same>
                  <diff xml:space="preserve"><test:ws> 	
&#xD;</test:ws></diff>
               </significant-whitespace-only-text-node>
            </test>
         </x:expect>
      </x:test>
      <x:test successful="false">
         <x:label>in [Result] without diff, the significant text nodes must be serialized without
				color.</x:label>
         <x:expect test="false()" select="()"/>
      </x:test>
   </x:scenario>
</x:report>
