<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../shared-like.xspec"
        stylesheet="../../../../mirror.xsl"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../shared-like.xspec">
      <label>Referenced and explicitly unshared scenario</label>
      <x:call xmlns:mirror="x-urn:test:mirror"
              xmlns:x="http://www.jenitennison.com/xslt/xspec"
              function="mirror:false"/>
      <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
      <test id="scenario1-expect1" successful="true">
         <label>This referenced and explicitly unshared x:expect should fire both at its original x:scenario and x:like</label>
         <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
      </test>
   </scenario>
   <scenario id="scenario2" xspec="../../shared-like.xspec">
      <label>Referenced and implicitly unshared scenario</label>
      <x:call xmlns:mirror="x-urn:test:mirror"
              xmlns:x="http://www.jenitennison.com/xslt/xspec"
              function="mirror:false"/>
      <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
      <test id="scenario2-expect1" successful="true">
         <label>This referenced and implicitly unshared x:expect should fire both at its original x:scenario and x:like</label>
         <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
      </test>
   </scenario>
   <scenario id="scenario3" xspec="../../shared-like.xspec">
      <label>Scenario for testing x:like which references a shared scenario</label>
      <x:call xmlns:mirror="x-urn:test:mirror"
              xmlns:x="http://www.jenitennison.com/xslt/xspec"
              function="mirror:false"/>
      <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
      <test id="scenario3-expect1" successful="true">
         <label>This nested shared x:expect should fire only at nested x:like</label>
         <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
      </test>
      <test id="scenario3-expect2" successful="true">
         <label>This referenced shared x:expect should fire only at x:like</label>
         <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
      </test>
   </scenario>
   <scenario id="scenario4" xspec="../../shared-like.xspec">
      <label>Scenario for testing x:like which references unshared scenarios</label>
      <scenario id="scenario4-scenario1" xspec="../../shared-like.xspec">
         <label>explicit one</label>
         <x:call xmlns:mirror="x-urn:test:mirror"
                 xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="mirror:false"/>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
         <test id="scenario4-scenario1-expect1" successful="true">
            <label>This referenced and explicitly unshared x:expect should fire both at its original x:scenario and x:like</label>
            <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
         </test>
      </scenario>
      <scenario id="scenario4-scenario2" xspec="../../shared-like.xspec">
         <label>implicit one</label>
         <x:call xmlns:mirror="x-urn:test:mirror"
                 xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="mirror:false"/>
         <result select="Q{http://www.w3.org/2001/XMLSchema}boolean('false')"/>
         <test id="scenario4-scenario2-expect1" successful="true">
            <label>This referenced and implicitly unshared x:expect should fire both at its original x:scenario and x:like</label>
            <expect xmlns:mirror="x-urn:test:mirror" test="true()" select="()"/>
         </test>
      </scenario>
   </scenario>
</report>
