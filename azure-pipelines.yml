trigger:
- azure_pipelines_test

variables:
  # full path to Saxon jar
  SAXON_JAR: '%TEMP%\xspec\saxon\saxon9he.jar'
  # Ant version used in oXygen
  ANT_VERSION: 1.9.8
  # full path to XML Resolver jar
  XML_RESOLVER_JAR: '%TEMP%\xspec\xml-resolver\resolver.jar'

strategy:
  matrix:
    saxon-9.9.1-5:
      SAXON_VERSION: '9.9.1-5' 
      JING_VERSION: '20181222'
      XMLCALABASH_VERSION: '1.1.27-99'
      BASEX_VERSION: '8.6.4'
    saxon-9.8.0-15:
      SAXON_VERSION: '9.8.0-15' 
    saxon-9.8.0-12:
      SAXON_VERSION: '9.8.0-12' 
  maxParallel: 3

pool:
  vmImage: 'vs2017-win2016'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install Saxon
      curl.exe -fsSL --create-dirs --retry 5 -o $(SAXON_JAR) "http://central.maven.org/maven2/net/sf/saxon/Saxon-HE/$(SAXON_VERSION)/Saxon-HE-$(SAXON_VERSION).jar"
      # check Saxon version
      java -cp "$(SAXON_JAR)" net.sf.saxon.Version
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install XML Calabash
      if( -Not( Test-Path -Path env:\XMLCALABASH_VERSION ) ) {
          echo "XMLCalabash will not be installed as it uses a higher version of Saxon"
      }
      
      else {
          curl.exe -fsSL --create-dirs --retry 5 -o "$(TEMP)\xspec\xmlcalabash\xmlcalabash.zip" "https://github.com/ndw/xmlcalabash1/releases/download/$(XMLCALABASH_VERSION)/xmlcalabash-$(XMLCALABASH_VERSION).zip"
          7z x "$(TEMP)\xspec\xmlcalabash\xmlcalabash.zip" -o"$(TEMP)\xspec\xmlcalabash"
          $Env:XMLCALABASH_JAR = "$(TEMP)\xspec\xmlcalabash\xmlcalabash-$(XMLCALABASH_VERSION)\xmlcalabash-$(XMLCALABASH_VERSION).jar"
      }