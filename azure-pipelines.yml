trigger:
- azure_pipelines_test

variables:
  # full path to Saxon jar
  SAXON_JAR: '%TEMP%\xspec\saxon\saxon9he.jar'
  # Ant version used in oXygen
  ANT_VERSION: 1.9.8
  # full path to XML Resolver jar
  XML_RESOLVER_JAR: '%TEMP%\xspec\xml-resolver\resolver.jar'

strategy:
  matrix:
    saxon-9.9.1-5:
      SAXON_VERSION: '9.9.1-5' 
      JING_VERSION: '20181222'
      XMLCALABASH_VERSION: '1.1.27-99'
      BASEX_VERSION: '8.6.4'
    saxon-9.8.0-15:
      SAXON_VERSION: '9.8.0-15' 
    saxon-9.8.0-12:
      SAXON_VERSION: '9.8.0-12' 
  maxParallel: 3

pool:
  vmImage: 'vs2017-win2016'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install Saxon
      curl.exe -fsSL --create-dirs --retry 5 -o $Env:SAXON_JAR "http://central.maven.org/maven2/net/sf/saxon/Saxon-HE/$Env:SAXON_VERSION/Saxon-HE-$Env:SAXON_VERSION.jar"
      # check Saxon version
      java -cp "$Env:SAXON_JAR" net.sf.saxon.Version
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install XML Calabash
      if( -Not( Test-Path -Path env:\XMLCALABASH_VERSION ) ) {
          echo "XMLCalabash will not be installed as it uses a higher version of Saxon"
      }
      
      else {
          curl.exe -fsSL --create-dirs --retry 5 -o "%TEMP%\xspec\xmlcalabash\xmlcalabash.zip" "https://github.com/ndw/xmlcalabash1/releases/download/$Env:XMLCALABASH_VERSION/xmlcalabash-$Env:XMLCALABASH_VERSION.zip"
          7z x "%TEMP%\xspec\xmlcalabash\xmlcalabash.zip" -o"%TEMP%\xspec\xmlcalabash"
          $Env:XMLCALABASH_JAR = "%TEMP%\xspec\xmlcalabash\xmlcalabash-$Env:XMLCALABASH_VERSION\xmlcalabash-$Env:XMLCALABASH_VERSION.jar"
      }
      
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install BaseX
      if( -Not( Test-Path -Path env:\BASEX_VERSION ) ) {
          echo "BaseX will not be installed as it requires to run XMLCalabash with a higher version of Saxon";
      }

      else {
          curl.exe -fsSL --create-dirs --retry 5 -o "%TEMP%\xspec\basex\basex.zip" "http://files.basex.org/releases/$Env:BASEX_VERSION/BaseX$($Env:BASEX_VERSION.Replace('.','')).zip"
          7z x "%TEMP%\xspec\basex\basex.zip" -o"%TEMP%\xspec\basex"
          $Env:BASEX_JAR = "%TEMP%\xspec\basex\basex\BaseX.jar"
      }

# TODO: equivalent to appveyor-retry is missing
#- task: PowerShell@2
#  inputs:
#    targetType: 'inline'
#    script: |
#      # force an older installation of ant and do not install JDK
#      choco install ant --force --ignore-dependencies --no-progress --version $Env:ANT_VERSION

# TODO: I tried to use the Chocolatey task to install ant but I could not find a way to pass the option to ignore the dependencies
#       As a result, the JDK gets installed and this increases the build time by 30-45 seconds
#- task: ChocolateyCommand@0
#  inputs:
#    command: 'install'
#    installPackageId: 'ant'
#    installPackageVersion: '$(ANT_VERSION)'
#    installInstallArgs: '--ignore-dependencies --no-progress'
#    installForce: true

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install XML Resolver
      curl.exe -fsSL --create-dirs --retry 5 -o "$Env:XML_RESOLVER_JAR" "http://central.maven.org/maven2/xml-resolver/xml-resolver/1.2/xml-resolver-1.2.jar"

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # install Jing
      if( -Not( Test-Path -Path env:\JING_VERSION ) ) {
          echo "Jing will not be installed"
      }

      else {
          $Env:JING_JAR = "%TEMP%\xspec\jing\jing.jar"
          curl.exe -fsSL --create-dirs --retry 5 -o "$Env:JING_JAR" "http://central.maven.org/maven2/org/relaxng/jing/$Env:JING_VERSION/jing-$Env:JING_VERSION.jar"
      }

- task: CmdLine@2
  inputs:
    script: |
      rem Print Java version
      java -version
      
      rem Print Ant version
      C:\ProgramData\chocolatey\bin\ant.exe -version
      
      rem Print Saxon version
      java -cp "%SAXON_JAR%" net.sf.saxon.Version

# TODO: Fails with this error message in test/win-bast/stub.cmd
#        CASE #2: invoking xspec without arguments prints usage even if Saxon environment variables are not defined
#...     :run @ 16:52:26.45: ..\bin\xspec.bat
#         find: '/v': No such file or directory
#- task: CmdLine@2
#  inputs:
#    script: |
#      rem execute bats-like unit tests
#      dir
#      test\run-bats.cmd

#- task: CmdLine@2
#  inputs:
#    script: |
#      rem execute XSpec like unit tests
#      test\run-xspec-tests-ant.cmd -silent

#- task: CmdLine@2
#  inputs:
#    script: |
#      rem execute XSpec end-to-end tests
#      test\end-to-end\run-e2e-tests.cmd -silent

# TODO: not working, failing with find: '/v': No such file or directory
- task: CmdLine@2
  inputs:
    script: |
      rem compile java
      "%JAVA_HOME%\bin\javac" -cp "%SAXON_JAR%" java\com\jenitennison\xslt\tests\XSLTCoverageTraceListener.java
      rem check git status
      git status java\com\jenitennison\xslt\tests\XSLTCoverageTraceListener.class --porcelain | %SYSTEMROOT%\system32\find /v "" & if errorlevel 1 ( verify > NUL ) else ( verify other 2> NUL )